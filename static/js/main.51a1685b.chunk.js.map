{"version":3,"sources":["logo.svg","components/Navigation/Navbar.js","components/Category/CategoryDetail.js","components/Posts/PostDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","categories","setCategories","useEffect","axios","method","url","then","response","data","className","href","type","id","map","c","to","pathname","fromDashboard","name","CategoryDetail","match","category","setCategory","posts","setPosts","params","p","title","content","src","image","alt","PostDetail","post","setPost","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAe,I,4CCwCAA,MAnCf,WAEI,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAWA,OATAC,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRC,IAAK,wCACNC,MAAK,SAAAC,GACJN,EAAcM,EAASC,WAE5B,IAGC,qBAAKC,UAAU,gDAAf,SACI,sBAAKA,UAAU,kBAAf,UACI,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,oBACI,wBAAQD,UAAU,iBAAiBE,KAAK,SAAS,iBAAe,WAAW,iBAAe,aAAa,gBAAc,YAAY,gBAAc,QAAQ,aAAW,oBAAlK,SACI,sBAAMF,UAAU,0BAExB,qBAAKA,UAAU,2BAA2BG,GAAG,YAA7C,SACI,qBAAIH,UAAU,aAAd,UACI,oBAAIA,UAAU,WAAd,SACI,mBAAGA,UAAU,kBAAkB,eAAa,OAAOC,KAAK,IAAxD,oBAEHV,EAAWa,KAAI,SAAAC,GAAC,OACb,cAAC,IAAD,CAAML,UAAU,WAAWM,GAAI,CAACC,SAAS,aAAD,OAAeF,EAAEF,GAAjB,KAAwBK,eAAe,GAA/E,SAAwFH,EAAEI,qBCuDvGC,MAjFf,YAAoC,IAAVC,EAAS,EAATA,MAEtB,EAAgCrB,mBAAS,IAAzC,mBAAOsB,EAAP,KAAiBC,EAAjB,KACA,EAA0BvB,mBAAS,IAAnC,mBAAOwB,EAAP,KAAcC,EAAd,KACMZ,EAAKQ,EAAMK,OAAOb,GAYxB,OAVAV,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRC,IAAI,sCAAD,OAAwCO,EAAxC,OACJN,MAAK,SAAAC,GACJe,EAAYf,EAASC,MACrBgB,EAASjB,EAASC,KAAKe,YAE5B,CAACX,IAGA,oDACsBS,EAAST,GAC3B,0CAAY,iCAASS,EAASH,UAC9B,uBACA,sBAAKT,UAAU,YAAYG,GAAG,iCAA9B,UACI,sBAAKH,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBG,GAAG,4BAApC,SACA,wBAAQH,UAAU,mBAAmBE,KAAK,SAAS,iBAAe,WAAW,iBAAe,8BAA8B,gBAAc,OAAO,gBAAc,6BAA7J,iCAIA,qBAAKC,GAAG,6BAA6BH,UAAU,mCAAmC,kBAAgB,4BAAlG,SACA,sBAAKA,UAAU,iBAAf,UACI,8EADJ,6WACua,mDADva,uDAKJ,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBG,GAAG,4BAApC,SACA,wBAAQH,UAAU,6BAA6BE,KAAK,SAAS,iBAAe,WAAW,iBAAe,8BAA8B,gBAAc,QAAQ,gBAAc,6BAAxK,iCAIA,qBAAKC,GAAG,6BAA6BH,UAAU,8BAA8B,kBAAgB,4BAA7F,SACA,sBAAKA,UAAU,iBAAf,UACI,+EADJ,8WACya,mDADza,uDAKJ,sBAAKA,UAAU,iBAAf,UACI,oBAAIA,UAAU,mBAAmBG,GAAG,8BAApC,SACA,wBAAQH,UAAU,6BAA6BE,KAAK,SAAS,iBAAe,WAAW,iBAAe,gCAAgC,gBAAc,QAAQ,gBAAc,+BAA1K,iCAIA,qBAAKC,GAAG,+BAA+BH,UAAU,8BAA8B,kBAAgB,8BAA/F,SACA,sBAAKA,UAAU,iBAAf,UACI,8EADJ,8WACwa,mDADxa,0DAMR,qBAAKA,UAAU,MAAf,SACKc,EAAMV,KAAI,SAAAa,GAAC,OACR,sBAAKjB,UAAU,WAAf,UACI,sBAAKA,UAAU,6BAAf,UACI,6BAAKiB,EAAEC,QACP,4BAAID,EAAEE,UACN,4BAAIF,EAAEd,KACN,qBAAKiB,IAAMH,EAAEI,MAAOC,IAAKL,EAAEC,MAAOlB,UAAU,iBAEpD,cAAC,IAAD,CAAMM,GAAI,CAAEC,SAAS,UAAD,OAAYU,EAAEd,IAAMK,eAAe,GAAvD,SACI,qBAAKR,UAAU,6BAAf,SACI,wBAAQA,UAAU,kBAAkBE,KAAK,SAAzC,wDATuBe,EAAEd,aCvCtCoB,MAvBf,YAAgC,IAAVZ,EAAS,EAATA,MAElB,EAAwBrB,mBAAS,IAAjC,mBAAOkC,EAAP,KAAaC,EAAb,KACMtB,EAAKQ,EAAMK,OAAOb,GAWxB,OATAV,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRC,IAAI,sCAAD,OAAwCO,EAAxC,OACJN,MAAK,SAAAC,GACJ2B,EAAQ3B,EAASC,WAEtB,CAACI,IAGA,gDACkBqB,EAAKrB,GACnB,uCAAS,iCAASqB,EAAKN,e,OCGpBQ,MAhBf,WAEE,OACE,qBAAK1B,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO2B,KAAK,cAAcC,OAAK,EAACC,UAAWN,IAC3C,cAAC,IAAD,CAAOI,KAAK,iBAAiBC,OAAK,EAACC,UAAWnB,aCJzCoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.51a1685b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link} from 'react-router-dom';\n\nfunction Navbar() {\n\n    const [categories, setCategories] = useState([])\n\n    useEffect(()=>{\n        axios({\n            method: \"GET\",\n            url: 'http://127.0.0.1:8080/api/category/'\n        }).then(response => {\n            setCategories(response.data)\n        })\n    }, [])\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                        </li>\n                        {categories.map(c =>(\n                            <Link className=\"nav-link\" to={{pathname: `/category/${c.id}/`, fromDashboard: false}}>{c.name}</Link>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n  );\n}\n\nexport default Navbar;\n","import React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\n\n\nfunction CategoryDetail({ match }) {\n\n    const [category, setCategory] = useState({})\n    const [posts, setPosts] = useState([])\n    const id = match.params.id\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8080/api/category/${id}/`\n        }).then(response => {\n            setCategory(response.data)\n            setPosts(response.data.posts)\n        })\n    }, [id])\n\n    return (\n        <div>\n            Category with id {category.id}\n            <p>Category <strong>{category.name}</strong></p>\n            <hr />\n            <div className=\"accordion\" id=\"accordionPanelsStayOpenExample\">\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\n                    <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\n                        Accordion Item #1\n                    </button>\n                    </h2>\n                    <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"panelsStayOpen-headingOne\">\n                    <div className=\"accordion-body\">\n                        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                    </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingTwo\">\n                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseTwo\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseTwo\">\n                        Accordion Item #2\n                    </button>\n                    </h2>\n                    <div id=\"panelsStayOpen-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingTwo\">\n                    <div className=\"accordion-body\">\n                        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                    </div>\n                    </div>\n                </div>\n                <div className=\"accordion-item\">\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingThree\">\n                    <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseThree\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseThree\">\n                        Accordion Item #3\n                    </button>\n                    </h2>\n                    <div id=\"panelsStayOpen-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingThree\">\n                    <div className=\"accordion-body\">\n                        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n                    </div>\n                    </div>\n                </div>\n                </div>\n            <div className=\"row\">\n                {posts.map(p => (\n                    <div className=\"col-md-4\" key={p.id}>\n                        <div className=\"d-grid gap-2 col-6 mx-auto\">\n                            <h4>{p.title}</h4>\n                            <p>{p.content}</p>\n                            <p>{p.id}</p>\n                            <img src= {p.image} alt={p.title} className=\"img-fluid\" />\n                        </div>\n                    <Link to={{ pathname: `/posts/${p.id}`, fromDashboard: false }}>\n                        <div className=\"d-grid gap-2 col-6 mx-auto\">\n                            <button className=\"btn btn-primary\" type=\"button\">Детали</button>\n                        </div>\n                    </Link>\n            </div>\n                ))}\n        </div>\n    </div>\n    );\n}\n\n\nexport default CategoryDetail;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\n\nfunction PostDetail({ match }) {\n\n    const [post, setPost] = useState({})\n    const id = match.params.id\n\n    useEffect(() =>{\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8080/api/blogpost/${id}/`\n        }).then(response =>{\n            setPost(response.data)\n        })\n    }, [id])\n\n    return (\n        <div>\n            Post with id {post.id}\n            <p>Title <strong>{post.title}</strong></p>\n        </div>\n    )\n}\n\n\nexport default PostDetail;","import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './components/Navigation/Navbar';\nimport CategoryDetail from './components/Category/CategoryDetail';\nimport PostDetail from './components/Posts/PostDetail';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/posts/:id/\" exact component={PostDetail} />\n          <Route path=\"/category/:id/\" exact component={CategoryDetail} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}