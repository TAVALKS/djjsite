{"version":3,"sources":["logo.svg","components/Navigation/Navbar.js","components/Category/CategoryDetail.js","components/Posts/PostDetail.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","categories","setCategories","useEffect","axios","method","url","then","response","data","className","href","type","id","map","c","to","pathname","fromDashboard","name","CategoryDetail","match","category","setCategory","posts","setPosts","params","class","p","title","content","src","image","alt","PostDetail","post","setPost","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b7b6791a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {Link} from 'react-router-dom';\n\nfunction Navbar() {\n\n    const [categories, setCategories] = useState([])\n\n    useEffect(()=>{\n        axios({\n            method: \"GET\",\n            url: 'http://127.0.0.1:8080/api/category/'\n        }).then(response => {\n            setCategories(response.data)\n        })\n    }, [])\n\n    return (\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n            <div className=\"container-fluid\">\n                <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item\">\n                            <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n                        </li>\n                        {categories.map(c =>(\n                            <Link className=\"nav-link\" to={{pathname: `/category/${c.id}/`, fromDashboard: false}}>{c.name}</Link>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        </nav>\n  );\n}\n\nexport default Navbar;\n","import React, {useEffect, useState} from 'react';\nimport {Link} from 'react-router-dom';\nimport axios from 'axios';\n\n\nfunction CategoryDetail({ match }) {\n\n    const [category, setCategory] = useState({})\n    const [posts, setPosts] = useState([])\n    const id = match.params.id\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8080/api/category/${id}/`\n        }).then(response => {\n            setCategory(response.data)\n            setPosts(response.data.posts)\n        })\n    }, [id])\n\n    return (\n        <div>\n            Category with id {category.id}\n            <p>Category <strong>{category.name}</strong></p>\n            <hr />\n            <div class=\"accordion accordion-flush\" id=\"accordionFlushExample\">\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"flush-headingOne\">\n                        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseOne\" aria-expanded=\"false\" aria-controls=\"flush-collapseOne\">\n                            Accordion Item #1\n                        </button>\n                        </h2>\n                        <div id=\"flush-collapseOne\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingOne\" data-bs-parent=\"#accordionFlushExample\">\n                        <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the first item's accordion body.</div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"flush-headingTwo\">\n                        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseTwo\" aria-expanded=\"false\" aria-controls=\"flush-collapseTwo\">\n                            Accordion Item #2\n                        </button>\n                        </h2>\n                        <div id=\"flush-collapseTwo\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingTwo\" data-bs-parent=\"#accordionFlushExample\">\n                        <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the second item's accordion body. Let's imagine this being filled with some actual content.</div>\n                        </div>\n                    </div>\n                    <div class=\"accordion-item\">\n                        <h2 class=\"accordion-header\" id=\"flush-headingThree\">\n                        <button class=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#flush-collapseThree\" aria-expanded=\"false\" aria-controls=\"flush-collapseThree\">\n                            Accordion Item #3\n                        </button>\n                        </h2>\n                        <div id=\"flush-collapseThree\" class=\"accordion-collapse collapse\" aria-labelledby=\"flush-headingThree\" data-bs-parent=\"#accordionFlushExample\">\n                        <div class=\"accordion-body\">Placeholder content for this accordion, which is intended to demonstrate the <code>.accordion-flush</code> class. This is the third item's accordion body. Nothing more exciting happening here in terms of content, but just filling up the space to make it look, at least at first glance, a bit more representative of how this would look in a real-world application.</div>\n                        </div>\n                    </div>\n                    </div>\n            <div className=\"row\">\n                {posts.map(p => (\n                    <div className=\"col-md-4\" key={p.id}>\n                        <div className=\"d-grid gap-2 col-6 mx-auto\">\n                            <h4>{p.title}</h4>\n                            <p>{p.content}</p>\n                            <p>{p.id}</p>\n                            <img src= {p.image} alt={p.title} className=\"img-fluid\" />\n                        </div>\n                    <Link to={{ pathname: `/posts/${p.id}`, fromDashboard: false }}>\n                        <div className=\"d-grid gap-2 col-6 mx-auto\">\n                            <button className=\"btn btn-primary\" type=\"button\">Детали</button>\n                        </div>\n                    </Link>\n            </div>\n                ))}\n        </div>\n    </div>\n    );\n}\n\n\nexport default CategoryDetail;","import React, {useEffect, useState} from 'react';\nimport axios from 'axios';\n\n\nfunction PostDetail({ match }) {\n\n    const [post, setPost] = useState({})\n    const id = match.params.id\n\n    useEffect(() =>{\n        axios({\n            method: \"GET\",\n            url: `http://127.0.0.1:8080/api/blogpost/${id}/`\n        }).then(response =>{\n            setPost(response.data)\n        })\n    }, [id])\n\n    return (\n        <div>\n            Post with id {post.id}\n            <p>Title <strong>{post.title}</strong></p>\n        </div>\n    )\n}\n\n\nexport default PostDetail;","import logo from './logo.svg';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from './components/Navigation/Navbar';\nimport CategoryDetail from './components/Category/CategoryDetail';\nimport PostDetail from './components/Posts/PostDetail';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\n\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar />\n        <Switch>\n          <Route path=\"/posts/:id/\" exact component={PostDetail} />\n          <Route path=\"/category/:id/\" exact component={CategoryDetail} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}